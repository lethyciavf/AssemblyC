{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25400\viewh12860\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
/*\
Lethycia Venturini Ferreira\
\
FLASH 711\
RAM 34 \'a0\'a0\
\
PTA5 LED VERDE\
PTA4 NC\
PTA3 LED VERMELHO\
PTA2 PEDESTRE\
PTA1 CH1\'a0\
PTA0 CH0\
\
*/\
\
#include "derivative.h" /* include peripheral declarations */\
\
\'a0//defini\'e7\'f5es\
\
#define VERDE 0x20\'a0\
#define AMARELO 0x28\'a0\
#define VERMELHO 0x08\
#define APAGADO 0X00\
//#define D1SEG 10000 //3,2MHz\
\
//variaveis\
\
unsigned char TEMPO;\
unsigned char STATUSTEMPO;\
\'a0\'a0\
//funcoes\'a0\
void interrupt PISCA (void);\
void interrupt PEDESTRE (void);\
void interrupt ROTTIMER (void);\
\
void main(void)\
\{//CONFIGURA\
\
CONFIG2= 0x40;    //3,2MHz COM IRQ/PULLUP E SEM RESET\
CONFIG1= 0x19;    //+5V SEM COP SEM LVI STOP ILEGAL\
DDRA=0x28;          //PTA5 E PTA3 SAIDAS\
PTAPUE=0x03;      //PULLUP NO PTA1 E NO PTA0\
TSC=0x30;             //PARAR E RESETAR\
TSC=0x46;             // /64 E HABILITA ROTTIMER\
_asm \{\
\'a0 LDHX #$100\
\'a0 TXS                      //PASSA A PILHA PRO FINAL DA RAM\
\'a0 LDHX #50000\
\'a0 STHX TMODH\'a0\
\'a0 CLI                      //HABILITA TODAS AS INTERRUPCOES\'a0\
\}\
for(;;)\
\
\{\
\'a0 \'a0if (!PTA_PTA1&&!PTA_PTA0)\{\
\'a0 \'a0\'a0\
\'a0 //TEMP0\
   PTA=VERDE;\
\'a0  TEMPO=5;\
\'a0   while(TEMPO>0)\{\
     //5 BILHOES DE NANO SEG \'a0 \'a0\
\'a0   \}\
\'a0 \'a0\
  PTA=AMARELO;\
\'a0 TEMPO=3;\
 \'a0 while(TEMPO>0)\{\
\
\'a0  \}\
\'a0 \'a0\
  PTA=VERMELHO;\
\'a0 // TEMPO=2; BUG\
\'a0_asm \{\
\'a0LDA #2\
\'a0STA TEMPO\
\'a0\}\
\'a0 while(TEMPO>0)\{ \'a0\
\
\'a0 \}\'a0\
\'a0 \'a0\}\
\'a0 if (!PTA_PTA1&&PTA_PTA0) \{\'a0\
\'a0 //TEMP1\
\
  PTA=VERDE;\
\'a0 TEMPO=3;\
\'a0 while(TEMPO>0)\{\'a0\
 \'a0\
\'a0 \}\
\'a0 \'a0\
PTA=AMARELO;\
\
  /*TEMPO=1 NAO ERA ACEITO PELO COMPILADOR\
    PARA SOLUCIONAR ESSE BUG, USOU-SE PARTE\
   DO CODIGO EM ASSEMBLY*/\
 \
_asm \{\
\'a0 \'a0 \'a0 LDA #$01 \
\'a0 \'a0 \'a0 STA TEMPO\
\'a0 \'a0 \'a0\}\'a0\
\'a0\
\'a0 while(TEMPO>0)\{\
\
\'a0 \'a0 \}\
\
\'a0 \'a0\
  PTA=VERMELHO;\
\'a0 TEMPO=4;\
\'a0 while(TEMPO>0)\{\
\'a0 \'a0\
\'a0 \}\
\'a0 \}\
\
\'a0 if (PTA_PTA1&&!PTA_PTA0)\{\
\'a0 //PISCAAMARELO\
\'a0\
\'a0_asm SWI \'a0// INSTRUCAO\
\'a0\'a0\
\'a0\'a0\
\'a0 \} else\{\
\'a0 //FIXAVERDE\
  PTA=VERDE;\
\'a0\'a0\
\'a0 \}\
\} \'a0\
\}\'a0\
\
\
void interrupt PEDESTRE (void) \{\
_asm \{\
\'a0 BSET 1, INTSCR\
\'a0 CLI \'a0 \'a0\
\}\
\
 if (PTA_PTA5&&!PTA_PTA3)\{ \
  STATUSTEMPO=TEMPO;\
  PTA=AMARELO;\
  TEMPO= 1;\'a0\
   while(TEMPO>0)\{\
\'a0 \'a0\'a0\
\'a0   \}\
  TEMPO=4;\
  PTA=VERMELHO;\
   while (TEMPO>0)\{\
\
   \}\
  PTA=VERDE;\
  TEMPO=STATUSTEMPO;\
  INTSCR=0x04;//ACK=1 E IMASK=0\
 \}\
\}\
\
//CORRIGIDO PARA QUE O TEMPO PASSASSE DE FORMA CORRETA\
//ANTES ROTTIMER ESTAVA INCOMPLETO\
\
void interrupt ROTTIMER(void)\
\{\
 while (TEMPO>0) \'a0\{ \'a0 \'a0 //DECREMENTA ATE QUE TEMPO=0\
 _asm \{\
\'a0 \'a0 \'a0 LDA TEMPO\'a0\
\'a0 \'a0 \'a0 DECA\'a0\
\'a0 \'a0 \'a0 STA TEMPO\
\'a0 \'a0 \'a0 \}\
\'a0 \}\
_asm \'a0BCLR 7, TSC //TIRAR PENDENCIA DO TIMER \'a0\'a0\
\}\
\
void interrupt PISCA (void)\{\
//ENQUANTO CH1CH0=10 PISCA\
_asm \{\
\'a0 BSET 1, INTSCR //DESABILITA O PEDESTRE\
\'a0 CLI\
\}\
while (PTA_PTA1&&!PTA_PTA0)\{\
\'a0\'a0\
PTA=AMARELO;\
\
_asm \{                                //MAIS UMA VEZ O CODEWARRIOR \'93BUGA\'94 \
\'a0 \'a0 \'a0 LDA #$01                     //AO COLOCAR TEMPO=1, SOLUCIONADO\
\'a0 \'a0 \'a0 STA TEMPO                //USANDO CODIGO EM ASM\
\'a0 \'a0 \'a0\} \'a0 \'a0 \'a0\'a0\
\'a0 \'a0 \'a0\
while(TEMPO>0)\{\
\'a0 \'a0\'a0\
\'a0 \}\
\'a0\
PTA=APAGADO;\
_asm \{                              //ERRO USANDO TEMPO=1\
\'a0 \'a0 \'a0 LDA #$01                   //SOLUCIONADO COM ASSEMBLY\
\'a0 \'a0 \'a0 STA TEMPO\
\'a0 \'a0 \'a0\} \'a0 \'a0 \'a0\'a0\'a0 \'a0\'a0\
\
TEMPO= 1;\'a0\
\
while(TEMPO>0)\{\
\'a0 \'a0\'a0\
\'a0 \}\
\}\
INTSCR=0x04; //TIRA A PENDENCIA E HABILITA O PEDESTRE\
\}\
\
\
\
\
/*\
VECTOR 1 PISCA\
VECTOR 2 PEDESTRE\
VECTOR 6 ROTTIMER\
*/}